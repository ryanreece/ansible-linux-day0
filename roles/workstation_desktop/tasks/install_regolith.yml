---
- name: Download Regolith GPG key and add to keyring
  become: true
  shell: |
    wget -qO - https://regolith-desktop.org/regolith.key | \
    gpg --dearmor | sudo tee /usr/share/keyrings/regolith-archive-keyring.gpg > /dev/null
  args:
    executable: /bin/bash
  changed_when: false
  tags: regolith

- name: Add Regolith repository to sources list
  become: true
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/regolith-archive-keyring.gpg] https://regolith-desktop.org/release-3_2-ubuntu-noble-amd64 noble main"
    filename: regolith
  tags: regolith

- name: Install Regolith desktop and related packages
  become: true
  ansible.builtin.apt:
    name:
      - regolith-desktop
      - regolith-session-flashback
      - regolith-look-lascaille
      - i3xrocks-battery
    state: present
  tags: regolith

- name: Validate the regolith-x11.desktop session exists
  ansible.builtin.stat:
    path: "/usr/share/xsessions/regolith-x11.desktop"
  register: regolith_exists
  tags: regolith

- name: Check if user ({{ ansible_user_id }}) session is already regolith-x11
  become: true
  ansible.builtin.command:
    cmd: "grep '^Session=regolith-x11' /var/lib/AccountsService/users/{{ ansible_user_id }}"
  register: regolith_session_set
  ignore_errors: true
  changed_when: false
  when: regolith_exists.stat.exists
  tags: regolith

- name: Backup the AccountService user file
  become: true
  ansible.builtin.copy:
    src: "/var/lib/AccountsService/users/{{ ansible_user_id }}"
    dest: "/var/lib/AccountsService/users/{{ ansible_user_id }}.bak"
    remote_src: true
  when:
    - regolith_session_set.rc != 0
    - regolith_exists.stat.exists
  tags: regolith

- name: Set user ({{ ansible_user_id }}) session to regolith-x11
  become: true
  ansible.builtin.lineinfile:
    path: "/var/lib/AccountsService/users/{{ ansible_user_id }}"
    regexp: '^Session='
    line: 'Session=regolith-x11'
  when:
    - regolith_session_set.rc != 0
    - regolith_exists.stat.exists
  tags: regolith
